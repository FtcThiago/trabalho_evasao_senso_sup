import streamlit as st
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.express as px
import pandas as pd
from Paginas_de_interacao.carregar_dados import carregar_dados

dados = carregar_dados()

def exibir():
    with st.expander("üîπ1. Quantos alunos ingressaram e quantos se formaram ao longo dos anos?"):
        st.subheader("üîπ1. Quantos alunos ingressaram e quantos se formaram ao longo dos anos?")

        opcoes = {
            "Geral": {
                "mat": "QT_MAT",
                "conc": "QT_CONC",
                "titulo": "Geral - Matriculados x Concluintes",
                "cor_mat": "#1f77b4",   # Azul
                "cor_conc": "#2ca02c"   # Verde
            },
            "Masculino": {
                "mat": "QT_MAT_MASC",
                "conc": "QT_CONC_MASC",
                "titulo": "Sexo Masculino - Matriculados x Concluintes",
                "cor_mat": "#3366cc",   # Azul forte
                "cor_conc": "#66ccff"   # Azul claro
            },
            "Feminino": {
                "mat": "QT_MAT_FEM",
                "conc": "QT_CONC_FEM",
                "titulo": "Sexo Feminino - Matriculados x Concluintes",
                "cor_mat": "#e377c2",   # Rosa
                "cor_conc": "#ff7f0e"   # Laranja
            }
        }

        # Calcula o maior valor do eixo y para padronizar
        colunas_analise = [
            "QT_MAT", "QT_CONC",
            "QT_MAT_MASC", "QT_CONC_MASC",
            "QT_MAT_FEM", "QT_CONC_FEM"
        ]
        dados_ano = dados.groupby("NU_ANO_CENSO")[colunas_analise].sum()
        maior_valor_y = dados_ano.max().max()

        escolha = st.radio("Escolha o recorte:", list(opcoes.keys()), horizontal=True)
        grupo = opcoes[escolha]
        dados_filtrados = dados.groupby('NU_ANO_CENSO')[[grupo["mat"], grupo["conc"]]].sum()

        fig = go.Figure()
        fig.add_trace(go.Bar(
            x=dados_filtrados.index,
            y=dados_filtrados[grupo["mat"]],
            name="Matriculados",
            marker_color=grupo["cor_mat"]
        ))
        fig.add_trace(go.Bar(
            x=dados_filtrados.index,
            y=dados_filtrados[grupo["conc"]],
            name="Concluintes",
            marker_color=grupo["cor_conc"]
        ))

        fig.update_layout(
            title=grupo["titulo"],
            barmode="group",
            yaxis_range=[0, maior_valor_y * 1.1]
        )

        st.plotly_chart(fig, use_container_width=True)
        st.dataframe(dados_filtrados, use_container_width=True)

        tab1, tab2, tab3 = st.tabs(["Geral", "Masculino", "Feminino"])

        with tab1:
            st.subheader("üîπ Explica√ß√£o - Geral")
        
            texto = """
            A an√°lise dos dados revela uma tend√™ncia interessante sobre a evolu√ß√£o do n√∫mero de alunos matriculados e concluintes ao longo dos anos. De 2018 a 2023, houve um crescimento no n√∫mero de matriculados, saindo de 85.920 em 2018 para 94.868 em 2023. Por outro lado, o n√∫mero de concluintes flutuou, come√ßando em 16.031 em 2018, caindo at√© 12.372 em 2021 e voltando a subir para 14.718 em 2023.

            Essa discrep√¢ncia entre o aumento dos matriculados e a varia√ß√£o dos concluintes pode indicar desafios no percurso acad√™mico dos alunos, como dificuldades em concluir o curso dentro do per√≠odo esperado. O crescimento cont√≠nuo de matr√≠culas sugere uma demanda crescente pela educa√ß√£o ao longo dos anos, o que pode estar relacionado a fatores como expans√£o da oferta educacional, aumento da acessibilidade ou mudan√ßas na percep√ß√£o da import√¢ncia dos estudos.
            """
            st.write(texto)

        with tab2:
            st.subheader("üîπ Explica√ß√£o - Masculino")
            st.write("""
            A an√°lise dos dados evidencia uma diferen√ßa significativa entre o n√∫mero de homens matriculados e homens concluintes nos cursos de gradua√ß√£o ao longo dos anos. Entre 2018 e 2023, a quantidade de matriculados manteve-se relativamente est√°vel, com pequenos aumentos anuais, enquanto o n√∫mero de concluintes variou, apresentando uma queda acentuada em 2020 e 2021, seguida por um leve crescimento at√© 2023.
            Esse comportamento sugere poss√≠veis dificuldades enfrentadas pelos alunos no decorrer do curso, como evas√£o, trancamento de matr√≠cula ou dificuldades acad√™micas, impedindo a conclus√£o dentro do per√≠odo esperado. Al√©m disso, a quantidade relativamente baixa de concluintes em compara√ß√£o aos matriculados pode indicar desafios estruturais na reten√ß√£o dos estudantes, demandando investiga√ß√µes mais aprofundadas sobre os fatores que afetam essa trajet√≥ria acad√™mica.
            üìä A evolu√ß√£o dos dados sugere que, embora haja um crescimento cont√≠nuo no n√∫mero de ingressantes, a conclus√£o do curso ainda representa um desafio para muitos alunos, o que pode estar ligado a fatores como condi√ß√µes financeiras, qualidade da oferta educacional, suporte acad√™mico e motiva√ß√£o ao longo dos anos.
            Se quiser, posso te ajudar a explorar hip√≥teses espec√≠ficas sobre essa tend√™ncia! üòÉ
            """)

        with tab3:
            st.subheader("üîπ Explica√ß√£o - Feminino")
            st.write("""
            O gr√°fico apresenta a rela√ß√£o entre homens matriculados e homens concluintes no ensino superior ao longo dos anos 2018 a 2023. Observa-se que, embora o n√∫mero de matriculados tenha tido varia√ß√µes pequenas entre os anos, o n√∫mero de concluintes √© significativamente menor, evidenciando uma poss√≠vel taxa de evas√£o expressiva.
                     
            Em 2018, havia aproximadamente 38.447 homens matriculados, enquanto apenas 6.741 conclu√≠ram seus cursos. Essa diferen√ßa se mant√©m nos anos seguintes, com o menor n√∫mero de conclus√µes em 2021 (5.146 conclu√≠ram), o que pode sugerir dificuldades enfrentadas pelos alunos naquele per√≠odo.
                     
            Por outro lado, em 2023, h√° um leve aumento no n√∫mero de concluintes (6.021), o que pode indicar uma melhora na reten√ß√£o estudantil ou adapta√ß√µes institucionais para incentivar a finaliza√ß√£o dos cursos.
            Esses dados podem ser utilizados para investigar fatores que influenciam a evas√£o, como pol√≠ticas educacionais, dificuldades financeiras, estrutura curricular e suporte acad√™mico.
            Se quiser, posso te ajudar a aprofundar ainda mais essa an√°lise! üöÄ
            """)

       


   


    #---------------------------------------------------------------------    
    with st.expander("üîπ2. Existe diferen√ßa de evas√£o entre cursos noturnos e diurnos?"):
        st.subheader("üîπ2. Existe diferen√ßa de evas√£o entre cursos noturnos e diurnos?")


        anos_disponiveis = sorted(dados["NU_ANO_CENSO"].unique())

        # --- Bot√£o para selecionar tipo de visualiza√ß√£o ---
        opcao = st.radio("Escolha a an√°lise:", ["Geral", "Ao longo do tempo"], horizontal=True)

        if opcao == "Geral":
            # Somat√≥rio de todos os anos
            total_geral = {
                "Turno": ["Diurno", "Diurno", "Noturno", "Noturno"],
                "Tipo": ["Matriculados", "Concluintes", "Matriculados", "Concluintes"],
                "Total": [
                    dados["QT_MAT_DIURNO"].sum(),
                    dados["QT_CONC_DIURNO"].sum(),
                    dados["QT_MAT_NOTURNO"].sum(),
                    dados["QT_CONC_NOTURNO"].sum(),
                ]
            }
            df_geral = pd.DataFrame(total_geral)

            fig_geral = px.bar(df_geral, x="Turno", y="Total", color="Tipo", barmode="group", text_auto=True,
                            color_discrete_map={"Matriculados": "#1f77b4", "Concluintes": "#2ca02c"})
            fig_geral.update_layout(title="Total Geral - Matriculados vs Concluintes por Turno", yaxis_title="Total de Alunos")
            st.plotly_chart(fig_geral)

        else:
            col1, col2 = st.columns(2)

            # Diurno ao longo do tempo
            with col1:
                dados_diurno = dados.groupby("NU_ANO_CENSO")[["QT_MAT_DIURNO", "QT_CONC_DIURNO"]].sum()
                fig_diurno = go.Figure()
                fig_diurno.add_trace(go.Bar(x=dados_diurno.index, y=dados_diurno["QT_MAT_DIURNO"],
                                            name="Matriculados", marker_color="#1f77b4"))
                fig_diurno.add_trace(go.Bar(x=dados_diurno.index, y=dados_diurno["QT_CONC_DIURNO"],
                                            name="Concluintes", marker_color="#2ca02c"))
                fig_diurno.update_layout(
                    title="Diurno - Ao longo do tempo",
                    barmode="group",
                    yaxis_title="Alunos",
                    xaxis=dict(tickmode='array', tickvals=anos_disponiveis, ticktext=[str(ano) for ano in anos_disponiveis])
                )
                st.plotly_chart(fig_diurno)

            # Noturno ao longo do tempo
            with col2:
                dados_noturno = dados.groupby("NU_ANO_CENSO")[["QT_MAT_NOTURNO", "QT_CONC_NOTURNO"]].sum()
                fig_noturno = go.Figure()
                fig_noturno.add_trace(go.Bar(x=dados_noturno.index, y=dados_noturno["QT_MAT_NOTURNO"],
                                            name="Matriculados", marker_color="#1f77b4"))
                fig_noturno.add_trace(go.Bar(x=dados_noturno.index, y=dados_noturno["QT_CONC_NOTURNO"],
                                            name="Concluintes", marker_color="#2ca02c"))
                fig_noturno.update_layout(
                    title="Noturno - Ao longo do tempo",
                    barmode="group",
                    yaxis_title="Alunos",
                    xaxis=dict(tickmode='array', tickvals=anos_disponiveis, ticktext=[str(ano) for ano in anos_disponiveis])
                )
                st.plotly_chart(fig_noturno)

        tab1, tab2= st.tabs(["Geral", "Ao longo do Tempo"])
        
        with tab1:
            st.subheader("üîπ Explica√ß√£o - Geral")
            st.write("""
            A an√°lise dos dados revela um contraste significativo entre a evas√£o nos cursos diurnos e noturnos. Os n√∫meros indicam que os cursos diurnos possuem um maior volume de matriculados, com 329.370 alunos, enquanto os cursos noturnos registram 165.148 matr√≠culas.
            Entretanto, ao analisar os concluintes, nota-se uma diferen√ßa substancial na reten√ß√£o acad√™mica. Nos cursos diurnos, 49.381 alunos conclu√≠ram seus estudos, enquanto nos noturnos, apenas 28.097 alunos finalizaram seus cursos. Essa discrep√¢ncia pode sugerir desafios espec√≠ficos para estudantes do turno noturno, como conciliar trabalho e estudo, maior carga hor√°ria di√°ria e dificuldades de acesso a recursos acad√™micos.
            O crescimento da matr√≠cula ao longo dos anos demonstra uma demanda cont√≠nua pelo ensino superior, mas a disparidade na conclus√£o evidencia barreiras que podem impactar diretamente a trajet√≥ria acad√™mica dos alunos. Investigar os fatores que influenciam essa diferen√ßa pode fornecer insights estrat√©gicos para reduzir a evas√£o e melhorar a reten√ß√£o estudantil nos cursos noturnos.
            Se quiser, posso aprofundar essa an√°lise com hip√≥teses adicionais! üöÄ

            """)


        with tab2:
            st.subheader("üîπ Explica√ß√£o - Ao longo do Tempo")
            st.write("""
            A an√°lise dos dados revela um padr√£o interessante na matr√≠cula e conclus√£o de homens no ensino superior ao longo dos anos 2018 a 2023. Durante esse per√≠odo, o n√∫mero de matriculados manteve-se relativamente est√°vel, oscilando entre 38.447 e 42.011 alunos, enquanto o n√∫mero de concluintes apresentou flutua√ß√µes mais acentuadas.
            Observa-se que em 2021, houve o menor n√∫mero de homens concluintes, com 5.146 alunos, o que pode sugerir dificuldades enfrentadas por estudantes naquele per√≠odo. J√° em 2023, houve um leve crescimento no total de concluintes, alcan√ßando 6.021 alunos.
            A discrep√¢ncia entre matriculados e concluintes pode indicar barreiras no percurso acad√™mico, como dificuldades financeiras, carga hor√°ria intensa ou desafios institucionais que impactam a perman√™ncia dos alunos at√© a finaliza√ß√£o do curso. Essa tend√™ncia refor√ßa a necessidade de medidas para reduzir a evas√£o e melhorar o suporte acad√™mico, garantindo que mais alunos possam concluir seus estudos dentro do tempo esperado. üöÄüìä
            Se precisar de uma an√°lise mais aprofundada, posso explorar hip√≥teses adicionais!
            """)

    #--------------------------------------------------------------------
    with st.expander("üîπ3. A evas√£o varia entre faixas et√°rias?"):
        st.subheader("üîπ3. A evas√£o varia entre faixas et√°rias?")

                # === DADOS ===
        faixa_etaria_mat = ['QT_MAT_0_17', 'QT_MAT_18_24','QT_MAT_25_29', 'QT_MAT_30_34', 'QT_MAT_35_39', 'QT_MAT_40_49','QT_MAT_50_59', 'QT_MAT_60_MAIS']
        faixa_etaria_conc = ['QT_CONC_0_17', 'QT_CONC_18_24', 'QT_CONC_25_29','QT_CONC_30_34', 'QT_CONC_35_39', 'QT_CONC_40_49', 'QT_CONC_50_59','QT_CONC_60_MAIS']
        faixa_etaria_padronizada = ['0-17', '18-24', '25-29', '30-34', '35-39', '40-49', '50-59', '60+']

        # === SOMA GERAL DE FAIXA ET√ÅRIA ===
        valores_mat = dados[faixa_etaria_mat].sum()
        valores_conc = dados[faixa_etaria_conc].sum()

        # === ABA DE NAVEGA√á√ÉO ===
        aba = st.radio("Selecione a visualiza√ß√£o", ["üìä Gr√°fico Geral", "üéì Curso por Faixa Et√°ria", "üìã Tabela de Porcentagens"])

        # === 1. GR√ÅFICO GERAL ===
        if aba == "üìä Gr√°fico Geral":
            fig = go.Figure()
            fig.add_trace(go.Bar(x=faixa_etaria_padronizada, y=valores_mat, name="Matriculados", marker_color="#636EFA"))
            fig.add_trace(go.Bar(x=faixa_etaria_padronizada, y=valores_conc, name="Concluintes", marker_color="#EF553B"))
            fig.update_layout(
                title="Matriculados x Concluintes por Faixa Et√°ria (Geral)",
                xaxis_title="Faixa Et√°ria",
                yaxis_title="Quantidade",
                barmode="group"
            )
            st.plotly_chart(fig)

        # === 2. RELA√á√ÉO CURSO X FAIXA ET√ÅRIA ===
        elif aba == "üéì Curso por Faixa Et√°ria":
            curso_selecionado = st.selectbox("Selecione um curso (NO_CINE_AREA_GERAL)", sorted(dados["NO_CINE_AREA_GERAL"].unique()))
            dados_filtrados = dados[dados["NO_CINE_AREA_GERAL"] == curso_selecionado]
            
            mat_curso = dados_filtrados[faixa_etaria_mat].sum()
            conc_curso = dados_filtrados[faixa_etaria_conc].sum()
            
            fig = go.Figure()
            fig.add_trace(go.Bar(x=faixa_etaria_padronizada, y=mat_curso, name="Matriculados", marker_color="#00CC96"))
            fig.add_trace(go.Bar(x=faixa_etaria_padronizada, y=conc_curso, name="Concluintes", marker_color="#AB63FA"))
            fig.update_layout(
                title=f"Matriculados x Concluintes por Faixa Et√°ria - Curso: {curso_selecionado}",
                xaxis_title="Faixa Et√°ria",
                yaxis_title="Quantidade",
                barmode="group"
            )
            st.plotly_chart(fig)

        # === 3. TABELA DE PORCENTAGENS ===
        elif aba == "üìã Tabela de Porcentagens":
           # --- TABELA DE PORCENTAGENS ---
                soma_mat_total = valores_mat.sum()
                soma_conc_total = valores_conc.sum()

                # Garante que as porcentagens tenham mesmo tamanho que as faixas
                porcent_mat = (valores_mat / soma_mat_total * 100).round(2).tolist()
                porcent_conc = (valores_conc / soma_conc_total * 100).round(2).tolist()

                df_percentual = pd.DataFrame({
                    'Faixa Et√°ria': faixa_etaria_padronizada,
                    '% Matriculados': porcent_mat,
                    '% Concluintes': porcent_conc
                })

                st.subheader("Percentual por Faixa Et√°ria")
                st.dataframe(df_percentual, use_container_width=True)

        tab1, tab2,tab3= st.tabs(["Geral", "Por faixa Et√°ria","Tabela Porcentagem"])
        
        with tab1:
            st.subheader("üîπ Explica√ß√£o - Geral")
            st.write("""
            A an√°lise dos dados evidencia a rela√ß√£o entre a evas√£o e a faixa et√°ria dos estudantes do ensino superior. Ao longo dos anos, percebe-se que a maioria dos matriculados pertence √† faixa de 18-24 anos, com mais de 350.000 alunos, enquanto o n√∫mero de concluintes nessa faixa et√°ria √© significativamente menor.
            Ao observar os padr√µes de evas√£o, notamos que os alunos mais jovens apresentam uma taxa de conclus√£o inferior √† esperada. Isso pode estar relacionado a desafios como adapta√ß√£o acad√™mica, mudan√ßas na vida pessoal ou dificuldades financeiras que afetam sua perman√™ncia no curso. J√° nas faixas et√°rias acima de 30 anos, os n√∫meros de matr√≠cula diminuem, mas ainda h√° uma diferen√ßa relevante entre ingressantes e concluintes, sugerindo que a perman√™ncia no ensino superior tamb√©m pode ser desafiadora para adultos em forma√ß√£o.
            O crescimento da matr√≠cula reflete um interesse cont√≠nuo pela educa√ß√£o superior, mas a diferen√ßa no n√∫mero de concluintes destaca a necessidade de estrat√©gias para aumentar a reten√ß√£o, oferecendo suporte acad√™mico adequado e pol√≠ticas para reduzir a evas√£o. üöÄüìä
            Se quiser aprofundar essa investiga√ß√£o, posso te ajudar a explorar hip√≥teses adicionais!


            """)
        with tab2:
            st.subheader("üîπ Explica√ß√£o - Por faixa Et√°ria")
            st.write("""
            A an√°lise dos dados evidencia como a evas√£o no ensino superior varia entre diferentes faixas et√°rias. O gr√°fico apresenta informa√ß√µes sobre matr√≠culas e conclus√µes no curso "Agricultura, Silvicultura, Pesca e Veterin√°ria", comparando a trajet√≥ria acad√™mica dos estudantes conforme sua idade.
            Observa-se que a maioria dos matriculados pertence √† faixa 18-24 anos, indicando que essa √© a idade predominante para ingresso no curso. No entanto, h√° uma redu√ß√£o significativa no n√∫mero de concluintes dentro dessa mesma faixa et√°ria, sugerindo que muitos alunos enfrentam dificuldades para concluir a gradua√ß√£o.
            Para faixas et√°rias mais avan√ßadas, como 30 anos ou mais, o n√∫mero de matriculados √© menor, mas a evas√£o continua evidente, pois a quantidade de concluintes tamb√©m √© reduzida. Esse padr√£o pode estar associado a fatores como conciliar trabalho e estudos, carga hor√°ria exigente, desafios financeiros ou mudan√ßas na vida pessoal que impactam a continuidade do curso.
            A an√°lise refor√ßa a import√¢ncia de pol√≠ticas educacionais voltadas para a reten√ß√£o de alunos, garantindo suporte acad√™mico adequado para reduzir a evas√£o e melhorar as taxas de conclus√£o. üöÄüìä
            Se quiser, posso te ajudar a explorar hip√≥teses adicionais sobre essa rela√ß√£o!
            """)
        with tab3:    
            st.subheader("üîπ Explica√ß√£o - Tabela Porcentagem")
            st.write("""
            A an√°lise dos dados revela uma rela√ß√£o entre a evas√£o no ensino superior e a faixa et√°ria dos estudantes matriculados no curso de Agricultura, Silvicultura, Pesca e Veterin√°ria. Como esperado, a maioria dos matriculados pertence √† faixa 18-24 anos, indicando que essa √© a idade predominante para ingresso na gradua√ß√£o. No entanto, observa-se uma significativa redu√ß√£o no n√∫mero de concluintes dentro dessa mesma faixa et√°ria.
            Nas faixas 25-29 anos e 30-34 anos, o n√∫mero de matriculados √© menor, mas ainda h√° uma diferen√ßa expressiva entre ingressantes e concluintes, sugerindo desafios na conclus√£o dos cursos. J√° em faixas et√°rias acima de 40 anos, tanto as matr√≠culas quanto as conclus√µes s√£o mais reduzidas, o que pode indicar menor ades√£o ao ensino superior nessa fase da vida.
            Esses padr√µes podem estar relacionados a fatores como dificuldades acad√™micas, necessidade de conciliar trabalho e estudos, quest√µes financeiras ou mudan√ßas na vida pessoal. A identifica√ß√£o dessas barreiras √© fundamental para desenvolver estrat√©gias voltadas √† reten√ß√£o estudantil, garantindo que mais alunos consigam concluir seus cursos e reduzir as taxas de evas√£o. üöÄüìä
            Se quiser aprofundar essa an√°lise, posso explorar hip√≥teses adicionais sobre essa 

            """)

    #--------------------------------------------------------------------
    with st.expander("üîπ4. A cor/ra√ßa influencia na taxa de evas√£o?"):
        st.subheader("üîπ4. A cor/ra√ßa influencia na taxa de evas√£o?")

        # üîπ Dados agrupados por ano
        dados_agrupados = dados.groupby("NU_ANO_CENSO").sum()

        # üîπ Defini√ß√£o das vari√°veis
        cor_raca_mat = ['QT_MAT_BRANCA', 'QT_MAT_PRETA', 'QT_MAT_PARDA', 'QT_MAT_AMARELA', 'QT_MAT_INDIGENA', 'QT_MAT_CORND']
        cor_raca_conc = ['QT_CONC_BRANCA', 'QT_CONC_PRETA', 'QT_CONC_PARDA', 'QT_CONC_AMARELA', 'QT_CONC_INDIGENA', 'QT_CONC_CORND']
        cor_raca_padronizada = ['Branca', 'Preta', 'Parda', 'Amarela', 'Ind√≠gena', 'Cor N√£o Declarada']

        # üîπ Op√ß√µes para escolha da aba
        aba = st.radio("Escolha a an√°lise:", ["üìà Evolu√ß√£o por Ra√ßa", "üìä Compara√ß√£o entre Ra√ßas", "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Compara√ß√£o por G√™nero"])

        # üîπ 1. Evolu√ß√£o por ra√ßa (Gr√°fico de linhas)
        if aba == "üìà Evolu√ß√£o por Ra√ßa":
            raca_selecionada = st.selectbox("Selecione uma ra√ßa:", cor_raca_padronizada)
            index_raca = cor_raca_padronizada.index(raca_selecionada)
            
            fig = go.Figure()
            fig.add_trace(go.Scatter(
                x=dados_agrupados.index, y=dados_agrupados[cor_raca_mat[index_raca]],
                mode="lines+markers", name="Matriculados", line=dict(color="blue")
            ))
            fig.add_trace(go.Scatter(
                x=dados_agrupados.index, y=dados_agrupados[cor_raca_conc[index_raca]],
                mode="lines+markers", name="Concluintes", line=dict(color="green")
            ))

            fig.update_layout(
                title=f"Evolu√ß√£o de Matriculados e Concluintes - {raca_selecionada}",
                xaxis_title="Ano", yaxis_title="Quantidade", template="plotly_white"
            )
            st.plotly_chart(fig)

        # üîπ 2. Compara√ß√£o entre Ra√ßas (Gr√°fico de barras)
        elif aba == "üìä Compara√ß√£o entre Ra√ßas":
            valores_mat = dados[cor_raca_mat].sum().values
            valores_conc = dados[cor_raca_conc].sum().values

            fig = go.Figure()
            fig.add_trace(go.Bar(x=cor_raca_padronizada, y=valores_mat, name="Matriculados", marker_color="royalblue"))
            fig.add_trace(go.Bar(x=cor_raca_padronizada, y=valores_conc, name="Concluintes", marker_color="seagreen"))

            fig.update_layout(
                title="Compara√ß√£o de Matr√≠culas e Conclus√µes por Ra√ßa",
                xaxis_title="Ra√ßa", yaxis_title="Quantidade", barmode="group", template="plotly_white"
            )
            st.plotly_chart(fig)

        # üîπ 3. Compara√ß√£o por G√™nero (Gr√°fico de barras)
        elif aba == "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Compara√ß√£o por G√™nero":
                    # üîπ Somando os valores de matr√≠cula e conclus√£o por g√™nero e ra√ßa
            valores_masc_mat = dados.groupby("NU_ANO_CENSO")["QT_MAT_MASC"].sum()
            valores_masc_conc = dados.groupby("NU_ANO_CENSO")["QT_CONC_MASC"].sum()
            valores_fem_mat = dados.groupby("NU_ANO_CENSO")["QT_MAT_FEM"].sum()
            valores_fem_conc = dados.groupby("NU_ANO_CENSO")["QT_CONC_FEM"].sum()

            # üîπ Criando gr√°fico de barras com todas as ra√ßas juntas
            fig = go.Figure()
            fig.add_trace(go.Bar(x=cor_raca_padronizada, y=valores_masc_mat, name="Matriculados - Homens", marker_color="blue"))
            fig.add_trace(go.Bar(x=cor_raca_padronizada, y=valores_masc_conc, name="Concluintes - Homens", marker_color="lightblue"))
            fig.add_trace(go.Bar(x=cor_raca_padronizada, y=valores_fem_mat, name="Matriculados - Mulheres", marker_color="purple"))
            fig.add_trace(go.Bar(x=cor_raca_padronizada, y=valores_fem_conc, name="Concluintes - Mulheres", marker_color="pink"))

            fig.update_layout(
                title="Matr√≠culas e Conclus√µes por Ra√ßa e G√™nero",
                xaxis_title="Ra√ßa",
                yaxis_title="Quantidade",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        tab1, tab2,tab3= st.tabs(["Evolu√ß√£o por Ra√ßa", "Compara√ß√£o ra√ßa","Compara√ß√£o G√™nero"])
        
        with tab1:
            st.subheader("üîπ Explica√ß√£o - Evolu√ß√£o por Ra√ßa")
            st.write("""
            A an√°lise dos dados revela o impacto da cor/ra√ßa na taxa de evas√£o no ensino superior. O gr√°fico mostra a evolu√ß√£o do n√∫mero de matriculados e concluintes na categoria Branca entre os anos 2018 e 2023.
            Os dados indicam que, ao longo dos anos, houve uma leve queda no n√∫mero de matriculados entre 2018 e 2021, seguido por um pequeno aumento at√© 2023. J√° a quantidade de concluintes apresenta um padr√£o semelhante, com redu√ß√£o at√© 2021 e crescimento discreto nos √∫ltimos anos.
            Essa diferen√ßa entre matriculados e concluintes pode sugerir que determinados fatores, como acesso √† educa√ß√£o, suporte acad√™mico, desafios financeiros e pol√≠ticas institucionais, influenciam a perman√™ncia dos alunos no curso. A an√°lise pode ser expandida para identificar se h√° diferen√ßas significativas entre grupos raciais, contribuindo para um entendimento mais profundo sobre desigualdades na evas√£o universit√°ria.
            Se quiser explorar compara√ß√µes entre diferentes ra√ßas ou g√™neros, posso ajudar a estruturar essa an√°lise! üöÄ



            """)
        with tab2:
            st.subheader("üîπ Explica√ß√£o - Compara√ß√£o ra√ßa")
            st.write("""
            A an√°lise dos dados revela a evolu√ß√£o do n√∫mero de matriculados e concluintes na categoria racial Branca entre os anos 2018 e 2023. O gr√°fico mostra que, ao longo dos anos, houve uma leve queda no total de matriculados, passando de cerca de 35.000 em 2018 para 30.000 em 2023. J√° a quantidade de concluintes tamb√©m diminuiu, indo de 5.000 em 2018 para aproximadamente 3.000 em 2023.
            Essa discrep√¢ncia entre o n√∫mero de alunos que ingressam e aqueles que concluem seus cursos pode indicar fatores que impactam a perman√™ncia acad√™mica, como dificuldades financeiras, adapta√ß√£o ao ensino superior ou at√© mesmo acesso a suporte educacional adequado. O padr√£o observado sugere que a taxa de conclus√£o n√£o acompanha o n√∫mero de ingressantes ao longo dos anos, o que pode representar um desafio para a redu√ß√£o da evas√£o estudantil

            """)
        with tab3:    
            st.subheader("üîπ Explica√ß√£o - Compara√ß√£o G√™nero")
            st.write("""
            A an√°lise dos dados revela uma rela√ß√£o entre a evas√£o no ensino superior e fatores como ra√ßa e g√™nero. O gr√°fico apresenta a compara√ß√£o entre matriculados e concluintes em diferentes grupos raciais, subdivididos por g√™nero.
            üìä Principais tend√™ncias observadas:
            - Em todos os grupos raciais, o n√∫mero de matriculados √© significativamente maior do que o de concluintes, evidenciando uma taxa de evas√£o expressiva.
            - Tanto homens quanto mulheres apresentam padr√µes semelhantes, com altos √≠ndices de matr√≠cula, mas uma conclus√£o consideravelmente inferior.
            - A categoria "Cor N√£o Declarada" tem uma baixa representatividade, sugerindo que parte dos estudantes opta por n√£o informar sua ra√ßa ao ingressar no ensino superior.
            Essa discrep√¢ncia entre ingresso e conclus√£o pode indicar barreiras acad√™micas, sociais ou econ√¥micas, que impactam diferentes grupos de forma distinta. Investigar essas diferen√ßas pode contribuir para estrat√©gias de reten√ß√£o estudantil e promo√ß√£o de pol√≠ticas mais inclusivas para a perman√™ncia dos alunos no ensino superior. üöÄüìä
            Se quiser explorar compara√ß√µes mais detalhadas ou hip√≥teses adicionais, posso te ajudar com essa an√°lise!
            """)

  #--------------------------------------------------------------------
    with st.expander("üîπ5. Alunos com defici√™ncia t√™m maior evas√£o?"):
        st.subheader("üîπ5. Alunos com defici√™ncia t√™m maior evas√£o?")

        # üîπ Op√ß√µes de visualiza√ß√£o
        aba = st.radio("Escolha a an√°lise:", ["üìä Total Geral", "üè´ Compara√ß√£o por Universidade", "üè¢ Compara√ß√£o por Rede"])

        # üîπ 1. Total de Matriculados e Concluintes
        if aba == "üìä Total Geral":
            matriculados_total = dados["QT_MAT_DEFICIENTE"].sum()
            concluintes_total = dados["QT_CONC_DEFICIENTE"].sum()

            fig = go.Figure()
            fig.add_trace(go.Bar(x=["Matriculados", "Concluintes"], y=[matriculados_total, concluintes_total], marker_color=["blue", "green"]))

            fig.update_layout(
                title="Total de Matriculados e Concluintes - Pessoas com Defici√™ncia",
                xaxis_title="Status",
                yaxis_title="Quantidade",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        # üîπ 2. Compara√ß√£o por Universidade (`SG_IES`)
        elif aba == "üè´ Compara√ß√£o por Universidade":
            dados_universidades = dados.groupby("SG_IES")[["QT_MAT_DEFICIENTE", "QT_CONC_DEFICIENTE"]].sum()

            fig = go.Figure()
            fig.add_trace(go.Bar(x=dados_universidades.index, y=dados_universidades["QT_MAT_DEFICIENTE"], name="Matriculados", marker_color="blue"))
            fig.add_trace(go.Bar(x=dados_universidades.index, y=dados_universidades["QT_CONC_DEFICIENTE"], name="Concluintes", marker_color="green"))

            fig.update_layout(
                title="Matr√≠culas e Conclus√µes por Universidade - Pessoas com Defici√™ncia",
                xaxis_title="Universidade",
                yaxis_title="Quantidade",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        # üîπ 3. Compara√ß√£o por Rede (`TP_REDE`)
        elif aba == "üè¢ Compara√ß√£o por Rede":
            dados_redes = dados.groupby("TP_REDE")[["QT_MAT_DEFICIENTE", "QT_CONC_DEFICIENTE"]].sum()

            fig = go.Figure()
            fig.add_trace(go.Bar(x=dados_redes.index, y=dados_redes["QT_MAT_DEFICIENTE"], name="Matriculados", marker_color="blue"))
            fig.add_trace(go.Bar(x=dados_redes.index, y=dados_redes["QT_CONC_DEFICIENTE"], name="Concluintes", marker_color="green"))

            fig.update_layout(
                title="Matr√≠culas e Conclus√µes por Rede de Ensino - Pessoas com Defici√™ncia",
                xaxis_title="Rede de Ensino",
                yaxis_title="Quantidade",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)
    #--------------------------------------------------------------------
    with st.expander("üîπ6. A evas√£o √© diferente entre cursos de √°reas diferentes?"):
        st.subheader("üîπ6. A evas√£o √© diferente entre cursos de √°reas diferentes?")

        
        # üîπ Escolha de visualiza√ß√£o
        aba = st.radio("Selecione a an√°lise:", [
            "üìä Matr√≠culas e Concluintes por Categoria",
            "üìå Compara√ß√£o por Categoria Espec√≠fica",
            "üîç An√°lise Detalhada por √Årea"
        ])

        # üîπ 1. Gr√°fico de Barras por `NO_CINE_AREA_GERAL`
        if aba == "üìä Matr√≠culas e Concluintes por Categoria":
            dados_geral = dados.groupby("NO_CINE_AREA_GERAL")[["QT_MAT", "QT_CONC"]].sum()

            fig = go.Figure()
            fig.add_trace(go.Bar(y=dados_geral.index, x=dados_geral["QT_MAT"], name="Matriculados", marker_color="blue", orientation='h'))
            fig.add_trace(go.Bar(y=dados_geral.index, x=dados_geral["QT_CONC"], name="Concluintes", marker_color="green", orientation='h'))

            fig.update_layout(
                title="Matr√≠culas e Concluintes por Categoria",
                xaxis_title="Quantidade",
                yaxis_title="Categoria",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        # üîπ 2. Compara√ß√£o por `NO_CINE_AREA_ESPECIFICA`
        elif aba == "üìå Compara√ß√£o por Categoria Espec√≠fica":
            categoria_especifica = st.selectbox("Selecione uma categoria espec√≠fica:", sorted(dados["NO_CINE_AREA_ESPECIFICA"].unique()))
            
            dados_filtrados = dados[dados["NO_CINE_AREA_ESPECIFICA"] == categoria_especifica]
            dados_especificos = dados_filtrados.groupby("NO_CINE_AREA_DETALHADA")[["QT_MAT", "QT_CONC"]].sum()

            fig = go.Figure()
            fig.add_trace(go.Bar(y=dados_especificos.index, x=dados_especificos["QT_MAT"], name="Matriculados", marker_color="blue", orientation='h'))
            fig.add_trace(go.Bar(y=dados_especificos.index, x=dados_especificos["QT_CONC"], name="Concluintes", marker_color="green", orientation='h'))

            fig.update_layout(
                title=f"Compara√ß√£o em {categoria_especifica}",
                xaxis_title="Quantidade",
                yaxis_title="√Årea Detalhada",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        # üîπ 3. An√°lise Detalhada por `NO_CINE_AREA_DETALHADA`
        elif aba == "üîç An√°lise Detalhada por √Årea":
            categoria_especifica = st.selectbox("Selecione uma categoria espec√≠fica:", sorted(dados["NO_CINE_AREA_ESPECIFICA"].unique()))
            dados_filtrados = dados[dados["NO_CINE_AREA_ESPECIFICA"] == categoria_especifica]

            # üîπ Criando tabela de an√°lise por √°rea detalhada
            dados_detalhados = dados_filtrados.groupby("NO_CINE_AREA_DETALHADA").agg({
                "QT_MAT": "sum",
                "QT_CONC": "sum",
                "QT_MAT_MASC": "sum",
                "QT_CONC_MASC": "sum",
                "QT_MAT_FEM": "sum",
                "QT_CONC_FEM": "sum"
            }).reset_index()

            # üîπ Determinando ra√ßa predominante por √°rea
            dados_filtrados["Ra√ßa Predominante"] = dados_filtrados[
                ["QT_MAT_BRANCA", "QT_MAT_PRETA", "QT_MAT_PARDA", "QT_MAT_AMARELA", "QT_MAT_INDIGENA"]
            ].idxmax(axis=1)
            
            dados_raca = dados_filtrados.groupby("NO_CINE_AREA_DETALHADA")["Ra√ßa Predominante"].first().reset_index()

            # üîπ Unindo os dados detalhados com a predomin√¢ncia racial
            df_final = pd.merge(dados_detalhados, dados_raca, on="NO_CINE_AREA_DETALHADA")

            # üîπ Exibindo a tabela
            st.subheader(f"An√°lise Detalhada por √Årea - {categoria_especifica}")
            st.dataframe(df_final, use_container_width=True)

    #--------------------------------------------------------------------
    with st.expander("üîπ7. A evas√£o √© maior em cursos EAD?"):
        st.subheader("üîπ7. A evas√£o √© maior em cursos EAD?")

                # üîπ Escolha de visualiza√ß√£o
        aba = st.radio("Selecione a an√°lise:", [
            "üìä Total de Matriculados e Concluintes",
            "üè´ Compara√ß√£o entre Modalidade de Ensino e Rede",
            "üè¢ Compara√ß√£o entre Modalidade de Ensino e Universidade"
        ])

        # üîπ 1. Total Geral de Matriculados e Concluintes
        if aba == "üìä Total de Matriculados e Concluintes":
            total_matriculados = dados["QT_MAT"].sum()
            total_concluintes = dados["QT_CONC"].sum()

            fig = go.Figure()
            fig.add_trace(go.Bar(x=["Matriculados"], y=[total_matriculados], name="Matriculados"))
            fig.add_trace(go.Bar(x=["Concluintes"], y=[total_concluintes], name="Concluintes"))

            fig.update_layout(
                title="Total de Matriculados e Concluintes",
                xaxis_title="Status",
                yaxis_title="Quantidade",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        # üîπ 2. Compara√ß√£o entre `TP_MODALIDADE_ENSINO` e `TP_REDE`
        elif aba == "üè´ Compara√ß√£o entre Modalidade de Ensino e Rede":
            dados_modalidade_rede = dados.groupby(["TP_MODALIDADE_ENSINO", "TP_REDE"])[["QT_MAT", "QT_CONC"]].sum().reset_index()

            fig = go.Figure()
            for _, row in dados_modalidade_rede.iterrows():
                modalidade = "Presencial" if row["TP_MODALIDADE_ENSINO"] == 1 else "A Dist√¢ncia"
                rede = row["TP_REDE"]

                fig.add_trace(go.Bar(x=[modalidade], y=[row["QT_MAT"]], name=f"Matriculados - Rede {rede}"))
                fig.add_trace(go.Bar(x=[modalidade], y=[row["QT_CONC"]], name=f"Concluintes - Rede {rede}"))

            fig.update_layout(
                title="Compara√ß√£o entre Modalidade de Ensino e Rede",
                xaxis_title="Modalidade de Ensino",
                yaxis_title="Quantidade",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)

        # üîπ 3. Compara√ß√£o entre `TP_MODALIDADE_ENSINO` e `SG_IES`
        elif aba == "üè¢ Compara√ß√£o entre Modalidade de Ensino e Universidade":
            dados_modalidade_universidade = dados.groupby(["TP_MODALIDADE_ENSINO", "SG_IES"])[["QT_MAT", "QT_CONC"]].sum().reset_index()

            fig = go.Figure()
            for _, row in dados_modalidade_universidade.iterrows():
                modalidade = "Presencial" if row["TP_MODALIDADE_ENSINO"] == 1 else "A Dist√¢ncia"
                universidade = row["SG_IES"]

                fig.add_trace(go.Bar(x=[modalidade], y=[row["QT_MAT"]], name=f"Matriculados - {universidade}"))
                fig.add_trace(go.Bar(x=[modalidade], y=[row["QT_CONC"]], name=f"Concluintes - {universidade}"))

            fig.update_layout(
                title="Compara√ß√£o entre Modalidade de Ensino e Universidade",
                xaxis_title="Modalidade de Ensino",
                yaxis_title="Quantidade",
                barmode="group",
                template="plotly_white"
            )

            st.plotly_chart(fig)

    #--------------------------------------------------------------------
    with st.expander("üîπ 8. Qual √© a distribui√ß√£o racial dos estudantes em cada √°rea do ensino superior?"):
            st.subheader("üîπ 8. Distribui√ß√£o racial dos estudantes por √°rea do ensino superior")

            # üîπ Agrupa por √°rea geral e soma por cor/ra√ßa
            agrupado = dados.groupby('NO_CINE_AREA_GERAL')[[
                'QT_MAT_BRANCA', 'QT_MAT_PRETA', 'QT_MAT_PARDA', 'QT_MAT_AMARELA', 'QT_MAT_INDIGENA'
            ]].sum()

            # üîπ Calcula propor√ß√£o por linha
            proporcoes = agrupado.div(agrupado.sum(axis=1), axis=0).reset_index()

            # üîπ Criando mapa de calor interativo com os valores corretos
            fig = px.imshow(
                proporcoes.iloc[:, 1:].values,  # üîπ Passando apenas os valores da matriz
                x=proporcoes.columns[1:],  # üîπ Definindo corretamente os r√≥tulos do eixo X
                y=proporcoes["NO_CINE_AREA_GERAL"],  # üîπ Definindo corretamente os r√≥tulos do eixo Y
                color_continuous_scale="YlGnBu",
                labels={"x": "Cor/Ra√ßa", "y": "√Årea Geral do Conhecimento", "color": "Propor√ß√£o"},
            )

                    # üîπ Melhorando interatividade
            fig.update_layout(
            title="Mapa de Calor Interativo - Propor√ß√£o de Matr√≠culas por Cor/Ra√ßa",
            xaxis_title="Cor/Ra√ßa",
            yaxis_title="√Årea Geral do Conhecimento",
            template="plotly_white",
            width=100,  # üîπ Ajusta a largura do gr√°fico
            height=900   # üîπ Ajusta a altura do gr√°fico
        )


            # üîπ Exibir gr√°fico corretamente no Streamlit
            st.plotly_chart(fig)




